import api from './api';

export const categoryService = {
  // R√©cup√©rer toutes les cat√©gories
  async getCategories() {
    try {
      console.log('üîÑ R√©cup√©ration des cat√©gories...');
      const response = await api.get('/api/categories');
      console.log('‚úÖ Cat√©gories r√©cup√©r√©es:', response.data);
      
      // V√©rifier la structure de la r√©ponse
      if (response.data && response.data.data) {
        return { success: true, data: response.data.data, total: response.data.total };
      } else if (Array.isArray(response.data)) {
        return { success: true, data: response.data, total: response.data.length };
      } else {
        return { success: true, data: response.data };
      }
    } catch (error) {
      console.error('‚ùå Erreur r√©cup√©ration cat√©gories:', error);
      return {
        success: false,
        message: error.response?.data?.message || error.message || 'Erreur lors de la r√©cup√©ration des cat√©gories'
      };
    }
  },

  // R√©cup√©rer une cat√©gorie par ID
  async getCategory(id) {
    try {
      const response = await api.get(`/api/categories/${id}`);
      return { success: true, data: response.data };
    } catch (error) {
      return {
        success: false,
        message: error.response?.data?.message || 'Erreur lors de la r√©cup√©ration de la cat√©gorie'
      };
    }
  },

  // Cr√©er une nouvelle cat√©gorie
  async createCategory(categoryData) {
    try {
      const response = await api.post('/api/categories', categoryData);
      return { success: true, data: response.data };
    } catch (error) {
      return {
        success: false,
        message: error.response?.data?.message || 'Erreur lors de la cr√©ation de la cat√©gorie'
      };
    }
  },

  // Mettre √† jour une cat√©gorie
  async updateCategory(id, categoryData) {
    try {
      const response = await api.put(`/api/categories/${id}`, categoryData);
      return { success: true, data: response.data };
    } catch (error) {
      return {
        success: false,
        message: error.response?.data?.message || 'Erreur lors de la mise √† jour de la cat√©gorie'
      };
    }
  },

  // Supprimer une cat√©gorie
  async deleteCategory(id) {
    try {
      const response = await api.delete(`/api/categories/${id}`);
      return { success: true, data: response.data };
    } catch (error) {
      return {
        success: false,
        message: error.response?.data?.message || 'Erreur lors de la suppression de la cat√©gorie'
      };
    }
  }
};

export default categoryService;
