#!/usr/bin/env node

// Script de correction pour la synchronisation des tables PostgreSQL
// Ce script doit √™tre ex√©cut√© dans le Shell de Render

const sequelize = require('../config/database');
const { Chant, Category, Admin } = require('../models');

async function fixDatabaseSync() {
  try {
    console.log('üîÑ Correction de la synchronisation des tables PostgreSQL...');
    
    // √âtape 1 : Supprimer toutes les tables existantes
    console.log('üóëÔ∏è  Suppression des tables existantes...');
    await sequelize.drop();
    console.log('‚úÖ Tables supprim√©es');
    
    // √âtape 2 : Cr√©er les tables dans le bon ordre
    console.log('üîÑ Cr√©ation des tables dans l\'ordre correct...');
    
    // D'abord les tables de base (sans d√©pendances)
    await Admin.sync({ force: true });
    console.log('‚úÖ Table Admin cr√©√©e');
    
    await Category.sync({ force: true });
    console.log('‚úÖ Table Category cr√©√©e');
    
    await Chant.sync({ force: true });
    console.log('‚úÖ Table Chant cr√©√©e');
    
    console.log('üéâ Synchronisation corrig√©e avec succ√®s !');
    
    // √âtape 3 : Cr√©er les donn√©es d'exemple
    console.log('üîÑ Cr√©ation des donn√©es d\'exemple...');
    
    // Cr√©er l'admin
    const bcrypt = require('bcrypt');
    const hashedPassword = await bcrypt.hash('admin123', 10);
    await Admin.create({
      username: 'admin',
      password: hashedPassword,
      email: 'admin@gospelchantetparole.com'
    });
    console.log('‚úÖ Administrateur cr√©√©');
    
    // Cr√©er les cat√©gories
    const categories = await Category.bulkCreate([
      { name: 'Louange', description: 'Chants de louange et d\'adoration' },
      { name: 'Culte', description: 'Chants pour le culte' },
      { name: 'Pri√®re', description: 'Chants de pri√®re' },
      { name: '√âvang√©lisation', description: 'Chants d\'√©vang√©lisation' }
    ]);
    console.log('‚úÖ Cat√©gories cr√©√©es');
    
    // Cr√©er les chants d'exemple
    await Chant.bulkCreate([
      {
        title: 'Amazing Grace',
        artist: 'Traditionnel',
        lyrics: 'Amazing grace, how sweet the sound\nThat saved a wretch like me...',
        category_id: categories[0].id
      },
      {
        title: 'How Great Thou Art',
        artist: 'Stuart K. Hine',
        lyrics: 'O Lord my God, when I in awesome wonder\nConsider all the worlds Thy hands have made...',
        category_id: categories[0].id
      },
      {
        title: 'Blessed Assurance',
        artist: 'Fanny J. Crosby',
        lyrics: 'Blessed assurance, Jesus is mine\nO what a foretaste of glory divine...',
        category_id: categories[1].id
      },
      {
        title: 'Great Is Thy Faithfulness',
        artist: 'Thomas O. Chisholm',
        lyrics: 'Great is Thy faithfulness, O God my Father\nThere is no shadow of turning with Thee...',
        category_id: categories[2].id
      },
      {
        title: 'Jesus Loves Me',
        artist: 'Anna B. Warner',
        lyrics: 'Jesus loves me, this I know\nFor the Bible tells me so...',
        category_id: categories[3].id
      }
    ]);
    console.log('‚úÖ Chants d\'exemple cr√©√©s');
    
    console.log('üéâ Base de donn√©es initialis√©e avec succ√®s !');
    console.log('üìã R√©sum√© :');
    console.log('- Admin : admin / admin123');
    console.log('- 4 cat√©gories cr√©√©es');
    console.log('- 5 chants d\'exemple cr√©√©s');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la correction :', error);
    throw error;
  } finally {
    await sequelize.close();
  }
}

// Ex√©cution
if (require.main === module) {
  fixDatabaseSync()
    .then(() => {
      console.log('‚úÖ Correction termin√©e avec succ√®s !');
      process.exit(0);
    })
    .catch(error => {
      console.error('‚ùå Erreur fatale :', error);
      process.exit(1);
    });
}

module.exports = fixDatabaseSync;
